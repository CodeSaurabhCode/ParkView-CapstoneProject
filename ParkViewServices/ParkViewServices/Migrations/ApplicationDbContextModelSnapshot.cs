// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkViewServices.Data;

#nullable disable

namespace ParkViewServices.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ParkViewServices.Models.Bookings.BookedList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BookedList");
                });

            modelBuilder.Entity("ParkViewServices.Models.Bookings.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid?>("BookedListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfChildren7To12")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfChildrenBelow7")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<bool?>("PaymentStatus")
                        .HasColumnType("bit");

                    b.Property<string>("PromoCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookedListId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ParkViewServices.Models.Bookings.BookingCartRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BookingCartId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("BookingCartRooms");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "New Delhi"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Mumbai"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Male"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 3,
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 4,
                            Name = "Beijing"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            Name = "Chennai"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            Name = "Kolkata"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 2,
                            Name = "Colombo"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 3,
                            Name = "Phuket"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 4,
                            Name = "Shanghai"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.CityImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            ImagePath = "~/images/new_delhi.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            ImagePath = "~/images/mumbai.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            ImagePath = "~/images/male.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            ImagePath = "~/images/bangkok.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            ImagePath = "~/images/beijing.jpg"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 6,
                            ImagePath = "~/images/chennai.jpg"
                        },
                        new
                        {
                            Id = 7,
                            CityId = 7,
                            ImagePath = "~/images/kolkata.jpg"
                        },
                        new
                        {
                            Id = 8,
                            CityId = 8,
                            ImagePath = "~/images/colombo.jpg"
                        },
                        new
                        {
                            Id = 9,
                            CityId = 9,
                            ImagePath = "~/images/phuket.jpg"
                        },
                        new
                        {
                            Id = 10,
                            CityId = 10,
                            ImagePath = "~/images/shanghai.jpg"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "India"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 4,
                            Name = "China"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main Street, New Delhi",
                            CityId = 1,
                            Description = "A luxurious oasis in the heart of New Delhi",
                            Email = "info@opulentoasis.com",
                            Name = "Opulent Oasis Retreat",
                            PhoneNumber = "+91-XXX-XXXXXXX",
                            TotalRooms = 40
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Park Avenue, New Delhi",
                            CityId = 1,
                            Description = "Experience the celestial luxury in New Delhi",
                            Email = "info@celestialmirage.com",
                            Name = "Celestial Mirage Hotel",
                            PhoneNumber = "+91-XXX-XXXXXXX",
                            TotalRooms = 50
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Beach Road, Mumbai",
                            CityId = 2,
                            Description = "Exclusive suites by the azure waves",
                            Email = "info@azurewaves.com",
                            Name = "Azure Waves Suites",
                            PhoneNumber = "+91-XXX-XXXXXXX",
                            TotalRooms = 80
                        },
                        new
                        {
                            Id = 4,
                            Address = "101 Downtown Avenue, Mumbai",
                            CityId = 2,
                            Description = "Discover bliss in the heart of Mumbai",
                            Email = "info@blissfulhaven.com",
                            Name = "Mumbai Blissful Haven",
                            PhoneNumber = "+91-XXX-XXXXXXX",
                            TotalRooms = 30
                        },
                        new
                        {
                            Id = 5,
                            Address = "456 Island Beach, Male",
                            CityId = 3,
                            Description = "A beachfront paradise in the Maldives",
                            Email = "info@tropicalparadise.com",
                            Name = "Tropical Paradise Resort",
                            PhoneNumber = "+960-XXXXXXX",
                            TotalRooms = 50
                        },
                        new
                        {
                            Id = 6,
                            Address = "789 Riverside Road, Bangkok",
                            CityId = 4,
                            Description = "Elysium by the scenic riverside in Bangkok",
                            Email = "info@riversideelysium.com",
                            Name = "Riverside Elysium Hotel",
                            PhoneNumber = "+66-XX-XXXXXXX",
                            TotalRooms = 90
                        },
                        new
                        {
                            Id = 7,
                            Address = "321 Downtown Plaza, Bangkok",
                            CityId = 4,
                            Description = "Urban comfort under sapphire skies in Bangkok",
                            Email = "info@sapphireskies.com",
                            Name = "Sapphire Skies Hotel",
                            PhoneNumber = "+66-XX-XXXXXXX",
                            TotalRooms = 75
                        },
                        new
                        {
                            Id = 8,
                            Address = "101 Forbidden City Avenue, Beijing",
                            CityId = 5,
                            Description = "Historic luxury near the Forbidden City",
                            Email = "info@imperialpalace.com",
                            Name = "Imperial Palace Beijing",
                            PhoneNumber = "+86-XXX-XXXXXXX",
                            TotalRooms = 150
                        },
                        new
                        {
                            Id = 9,
                            Address = "789 Wangfujing Street, Beijing",
                            CityId = 5,
                            Description = "A downtown haven in the heart of Beijing",
                            Email = "info@downtownhaven.com",
                            Name = "Beijing Downtown Haven",
                            PhoneNumber = "+86-XXX-XXXXXXX",
                            TotalRooms = 100
                        },
                        new
                        {
                            Id = 10,
                            Address = "456 Park Road, Kolkata",
                            CityId = 7,
                            Description = "Elegant luxury at Kolkata Grand Plaza",
                            Email = "info@grandplaza.com",
                            Name = "Kolkata Grand Plaza",
                            PhoneNumber = "+91-XXX-XXXXXXX",
                            TotalRooms = 80
                        },
                        new
                        {
                            Id = 11,
                            Address = "789 Oceanfront Drive, Colombo",
                            CityId = 8,
                            Description = "Find bliss by the Colombo beach",
                            Email = "info@beachbliss.com",
                            Name = "Colombo Beach Bliss",
                            PhoneNumber = "+94-XX-XXXXXXX",
                            TotalRooms = 60
                        },
                        new
                        {
                            Id = 12,
                            Address = "101 Tropical Lane, Phuket",
                            CityId = 9,
                            Description = "Private villa paradise in Phuket",
                            Email = "info@paradisevilla.com",
                            Name = "Phuket Paradise Villa",
                            PhoneNumber = "+66-XX-XXXXXXX",
                            TotalRooms = 40
                        },
                        new
                        {
                            Id = 13,
                            Address = "123 Pudong Avenue, Shanghai",
                            CityId = 10,
                            Description = "Sanctuary with a view of the Shanghai skyline",
                            Email = "info@skylinesanctuary.com",
                            Name = "Shanghai Skyline Sanctuary",
                            PhoneNumber = "+86-XXX-XXXXXXX",
                            TotalRooms = 120
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.HotelImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Caption = "Hotel Lobby",
                            HotelId = 1,
                            ImagePath = "~/Images/Hotel1.jpeg"
                        },
                        new
                        {
                            Id = 2,
                            Caption = "Pool Area",
                            HotelId = 1,
                            ImagePath = "~/Images/Hotel12.jpeg"
                        },
                        new
                        {
                            Id = 3,
                            Caption = "Deluxe Room",
                            HotelId = 2,
                            ImagePath = "~/Images/Hotel2.jpeg"
                        },
                        new
                        {
                            Id = 4,
                            Caption = "Restaurant",
                            HotelId = 2,
                            ImagePath = "~/Images/Hotel22.jpeg"
                        },
                        new
                        {
                            Id = 5,
                            Caption = "Deluxe Room",
                            HotelId = 3,
                            ImagePath = "~/Images/Hotel3.jpeg"
                        },
                        new
                        {
                            Id = 6,
                            Caption = "Restaurant",
                            HotelId = 3,
                            ImagePath = "~/Images/Hotel32.jpeg"
                        },
                        new
                        {
                            Id = 7,
                            Caption = "Deluxe Room",
                            HotelId = 4,
                            ImagePath = "~/Images/Hotel4.jpeg"
                        },
                        new
                        {
                            Id = 8,
                            Caption = "Restaurant",
                            HotelId = 4,
                            ImagePath = "~/Images/Hotel42.jpeg"
                        },
                        new
                        {
                            Id = 9,
                            Caption = "Deluxe Room",
                            HotelId = 5,
                            ImagePath = "~/Images/Hotel5.jpeg"
                        },
                        new
                        {
                            Id = 10,
                            Caption = "Restaurant",
                            HotelId = 5,
                            ImagePath = "~/Images/Hotel52.jpeg"
                        },
                        new
                        {
                            Id = 11,
                            Caption = "Deluxe Room",
                            HotelId = 6,
                            ImagePath = "~/Images/Hotel6.jpeg"
                        },
                        new
                        {
                            Id = 12,
                            Caption = "Restaurant",
                            HotelId = 6,
                            ImagePath = "~/Images/Hotel62.jpeg"
                        },
                        new
                        {
                            Id = 13,
                            Caption = "Deluxe Room",
                            HotelId = 7,
                            ImagePath = "~/Images/Hotel7.jpeg"
                        },
                        new
                        {
                            Id = 14,
                            Caption = "Restaurant",
                            HotelId = 7,
                            ImagePath = "~/Images/Hotel72.jpeg"
                        },
                        new
                        {
                            Id = 15,
                            Caption = "Deluxe Room",
                            HotelId = 8,
                            ImagePath = "~/Images/Hotel8.jpeg"
                        },
                        new
                        {
                            Id = 16,
                            Caption = "Restaurant",
                            HotelId = 8,
                            ImagePath = "~/Images/Hotel82.jpeg"
                        },
                        new
                        {
                            Id = 17,
                            Caption = "Deluxe Room",
                            HotelId = 9,
                            ImagePath = "~/Images/Hotel9.jpeg"
                        },
                        new
                        {
                            Id = 18,
                            Caption = "Restaurant",
                            HotelId = 9,
                            ImagePath = "~/Images/Hotel92.jpeg"
                        },
                        new
                        {
                            Id = 19,
                            Caption = "Deluxe Room",
                            HotelId = 10,
                            ImagePath = "~/Images/Hotel10.jpeg"
                        },
                        new
                        {
                            Id = 20,
                            Caption = "Restaurant",
                            HotelId = 10,
                            ImagePath = "~/Images/Hotel102.jpeg"
                        },
                        new
                        {
                            Id = 21,
                            Caption = "Deluxe Room",
                            HotelId = 11,
                            ImagePath = "~/Images/Hotel11.jpeg"
                        },
                        new
                        {
                            Id = 22,
                            Caption = "Restaurant",
                            HotelId = 11,
                            ImagePath = "~/Images/Hotel112.jpeg"
                        },
                        new
                        {
                            Id = 23,
                            Caption = "Deluxe Room",
                            HotelId = 12,
                            ImagePath = "~/Images/Hotel12.jpeg"
                        },
                        new
                        {
                            Id = 24,
                            Caption = "Restaurant",
                            HotelId = 12,
                            ImagePath = "~/Images/Hotel122.jpeg"
                        },
                        new
                        {
                            Id = 25,
                            Caption = "Deluxe Room",
                            HotelId = 13,
                            ImagePath = "~/Images/Hotel13.jpeg"
                        },
                        new
                        {
                            Id = 26,
                            Caption = "Restaurant",
                            HotelId = 13,
                            ImagePath = "~/Images/Hotel132.jpeg"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.HotelSingleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelSingleImage");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HotelId = 1,
                            ImagePath = "~/images/1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            HotelId = 2,
                            ImagePath = "~/images/2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            HotelId = 3,
                            ImagePath = "~/images/3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            HotelId = 4,
                            ImagePath = "~/images/4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            HotelId = 5,
                            ImagePath = "~/images/5.jpg"
                        },
                        new
                        {
                            Id = 6,
                            HotelId = 6,
                            ImagePath = "~/images/6.jpg"
                        },
                        new
                        {
                            Id = 7,
                            HotelId = 7,
                            ImagePath = "~/images/7.jpg"
                        },
                        new
                        {
                            Id = 8,
                            HotelId = 8,
                            ImagePath = "~/images/8.jpg"
                        },
                        new
                        {
                            Id = 9,
                            HotelId = 9,
                            ImagePath = "~/images/9.jpg"
                        },
                        new
                        {
                            Id = 10,
                            HotelId = 10,
                            ImagePath = "~/images/10.jpg"
                        },
                        new
                        {
                            Id = 11,
                            HotelId = 11,
                            ImagePath = "~/images/11.jpg"
                        },
                        new
                        {
                            Id = 12,
                            HotelId = 12,
                            ImagePath = "~/images/12.jpg"
                        },
                        new
                        {
                            Id = 13,
                            HotelId = 13,
                            ImagePath = "~/images/13.jpg"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BedCount")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Presidential Suite 101",
                            RoomNumber = 101,
                            RoomTypeId = 4,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Presidential Suite 102",
                            RoomNumber = 102,
                            RoomTypeId = 4,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Presidential Suite 103",
                            RoomNumber = 103,
                            RoomTypeId = 4,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Presidential Suite 104",
                            RoomNumber = 104,
                            RoomTypeId = 4,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Presidential Suite 105",
                            RoomNumber = 105,
                            RoomTypeId = 4,
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 201",
                            RoomNumber = 201,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 7,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 202",
                            RoomNumber = 202,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 203",
                            RoomNumber = 203,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 9,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 204",
                            RoomNumber = 204,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 10,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 205",
                            RoomNumber = 205,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 11,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 206",
                            RoomNumber = 206,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 12,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 207",
                            RoomNumber = 207,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 13,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 208",
                            RoomNumber = 208,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 14,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 209",
                            RoomNumber = 209,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 15,
                            BedCount = 1,
                            HotelId = 1,
                            RoomName = "Executive Suite 210",
                            RoomNumber = 210,
                            RoomTypeId = 3,
                            Status = false
                        },
                        new
                        {
                            Id = 16,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 301",
                            RoomNumber = 301,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 17,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 302",
                            RoomNumber = 302,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 18,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 303",
                            RoomNumber = 303,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 19,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 304",
                            RoomNumber = 304,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 20,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 305",
                            RoomNumber = 305,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 21,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 306",
                            RoomNumber = 306,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 22,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 307",
                            RoomNumber = 307,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 23,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 308",
                            RoomNumber = 308,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 24,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 309",
                            RoomNumber = 309,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 25,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 310",
                            RoomNumber = 310,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 36,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 311",
                            RoomNumber = 311,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 37,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 312",
                            RoomNumber = 312,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 38,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 313",
                            RoomNumber = 313,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 39,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 314",
                            RoomNumber = 314,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 40,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Deluxe Room 315",
                            RoomNumber = 315,
                            RoomTypeId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 26,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 401",
                            RoomNumber = 401,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 27,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 402",
                            RoomNumber = 402,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 28,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 403",
                            RoomNumber = 403,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 29,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 404",
                            RoomNumber = 404,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 30,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 405",
                            RoomNumber = 405,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 31,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 406",
                            RoomNumber = 406,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 32,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 407",
                            RoomNumber = 407,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 33,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 408",
                            RoomNumber = 408,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 34,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 409",
                            RoomNumber = 409,
                            RoomTypeId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 35,
                            BedCount = 2,
                            HotelId = 1,
                            RoomName = "Super Deluxe Room 410",
                            RoomNumber = 410,
                            RoomTypeId = 2,
                            Status = false
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.RoomCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("Occupied")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HotelID");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomCount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 5,
                            HotelID = 1,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 2,
                            Count = 10,
                            HotelID = 1,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 3,
                            Count = 15,
                            HotelID = 1,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 4,
                            Count = 10,
                            HotelID = 1,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 5,
                            Count = 3,
                            HotelID = 2,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 6,
                            Count = 7,
                            HotelID = 2,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 7,
                            Count = 20,
                            HotelID = 2,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 8,
                            Count = 20,
                            HotelID = 2,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 9,
                            Count = 10,
                            HotelID = 3,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 10,
                            Count = 30,
                            HotelID = 3,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 11,
                            Count = 20,
                            HotelID = 3,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 12,
                            Count = 20,
                            HotelID = 3,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 13,
                            Count = 3,
                            HotelID = 4,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 14,
                            Count = 8,
                            HotelID = 4,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 15,
                            Count = 9,
                            HotelID = 4,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 16,
                            Count = 10,
                            HotelID = 4,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 17,
                            Count = 2,
                            HotelID = 5,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 18,
                            Count = 12,
                            HotelID = 5,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 19,
                            Count = 20,
                            HotelID = 5,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 20,
                            Count = 8,
                            HotelID = 5,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 21,
                            Count = 3,
                            HotelID = 6,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 22,
                            Count = 18,
                            HotelID = 6,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 23,
                            Count = 28,
                            HotelID = 6,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 24,
                            Count = 21,
                            HotelID = 6,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 25,
                            Count = 7,
                            HotelID = 7,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 26,
                            Count = 25,
                            HotelID = 7,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 27,
                            Count = 40,
                            HotelID = 7,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 28,
                            Count = 28,
                            HotelID = 7,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 29,
                            Count = 5,
                            HotelID = 8,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 30,
                            Count = 15,
                            HotelID = 8,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 31,
                            Count = 25,
                            HotelID = 8,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 32,
                            Count = 30,
                            HotelID = 8,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 33,
                            Count = 8,
                            HotelID = 9,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 34,
                            Count = 30,
                            HotelID = 9,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 35,
                            Count = 40,
                            HotelID = 9,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 36,
                            Count = 22,
                            HotelID = 9,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 37,
                            Count = 5,
                            HotelID = 10,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 38,
                            Count = 15,
                            HotelID = 10,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 39,
                            Count = 20,
                            HotelID = 10,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 40,
                            Count = 40,
                            HotelID = 10,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 41,
                            Count = 5,
                            HotelID = 11,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 42,
                            Count = 15,
                            HotelID = 11,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 43,
                            Count = 20,
                            HotelID = 11,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 44,
                            Count = 40,
                            HotelID = 11,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 45,
                            Count = 2,
                            HotelID = 12,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 46,
                            Count = 5,
                            HotelID = 12,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 47,
                            Count = 13,
                            HotelID = 12,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 48,
                            Count = 20,
                            HotelID = 12,
                            Occupied = 0,
                            RoomTypeID = 4
                        },
                        new
                        {
                            Id = 49,
                            Count = 5,
                            HotelID = 13,
                            Occupied = 0,
                            RoomTypeID = 1
                        },
                        new
                        {
                            Id = 50,
                            Count = 15,
                            HotelID = 13,
                            Occupied = 0,
                            RoomTypeID = 2
                        },
                        new
                        {
                            Id = 51,
                            Count = 20,
                            HotelID = 13,
                            Occupied = 0,
                            RoomTypeID = 3
                        },
                        new
                        {
                            Id = 52,
                            Count = 40,
                            HotelID = 13,
                            Occupied = 0,
                            RoomTypeID = 4
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.RoomImages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Caption = "Deluxe Room",
                            ImagePath = "~/Images/room10.jpeg",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Caption = "Deluxe Room Bathroom",
                            ImagePath = "~/Images/room12.jpeg",
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Caption = "Super Deluxe Room",
                            ImagePath = "~/Images/room20.jpeg",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Caption = "Super Deluxe Room View",
                            ImagePath = "~/Images/room22.jpeg",
                            RoomTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Caption = "Executive Suite",
                            ImagePath = "~/Images/Hotel30.jpeg",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            Caption = "Executive Suite Living Area",
                            ImagePath = "~/Images/Hotel32.jpeg",
                            RoomTypeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Caption = "Presidential Suite",
                            ImagePath = "~/Images/Hotel40.jpeg",
                            RoomTypeId = 4
                        },
                        new
                        {
                            Id = 8,
                            Caption = "Presidential Suite Bedroom",
                            ImagePath = "~/Images/Hotel42.jpeg",
                            RoomTypeId = 4
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Luxurious and spacious presidential suite",
                            Price = 28000,
                            RoomTypeName = "Presidential Suite"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Elegant executive room with modern amenities",
                            Price = 20000,
                            RoomTypeName = "Executive"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Comfortable and stylish deluxe room",
                            Price = 16000,
                            RoomTypeName = "Deluxe"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Superior deluxe room for a premium stay",
                            Price = 8000,
                            RoomTypeName = "Super Deluxe"
                        });
                });

            modelBuilder.Entity("ParkViewServices.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParkViewServices.Models.Bookings.Booking", b =>
                {
                    b.HasOne("ParkViewServices.Models.Bookings.BookedList", "BookedList")
                        .WithMany()
                        .HasForeignKey("BookedListId");

                    b.Navigation("BookedList");
                });

            modelBuilder.Entity("ParkViewServices.Models.Bookings.BookingCartRoom", b =>
                {
                    b.HasOne("ParkViewServices.Models.Rooms.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.City", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.CityImage", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.Hotel", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.HotelImages", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ParkViewServices.Models.Hotels.HotelSingleImage", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.Room", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkViewServices.Models.Rooms.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.RoomCount", b =>
                {
                    b.HasOne("ParkViewServices.Models.Hotels.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParkViewServices.Models.Rooms.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("ParkViewServices.Models.Rooms.RoomImages", b =>
                {
                    b.HasOne("ParkViewServices.Models.Rooms.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
